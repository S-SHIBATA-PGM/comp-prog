000001 IDENTIFICATION DIVISION.
000002 PROGRAM-ID. ABC_121_B.
000003 
000004 DATA DIVISION.
000005 WORKING-STORAGE SECTION.
000006 01 ln         PIC X(400).
000007 01 maxlen     PIC 9(10) VALUE 100 COMP.
000008 01 maxlenm    PIC 9(10) VALUE 100 COMP.
000009 01 cur        PIC 9(10) VALUE 1 COMP.
000010 01 curm       PIC 9(10) VALUE 1 COMP.
000011 01 curx       PIC 9(10) VALUE 1 COMP.
000012 01 cury       PIC 9(10) VALUE 1 COMP.
000013 01 d          PIC 9(10).
000014 01 i          PIC 9(10) VALUE 1 COMP.
000015 01 j          PIC 9(10) COMP.
000016 01 k          PIC 9(10) VALUE 1 COMP.
000017 01 l          PIC 9(10) COMP.
000018 01 ax         PIC 9(10) VALUE ZERO COMP.
000019 01 ay         PIC 9(10) VALUE ZERO COMP.
000020 01 x          PIC 9(10) VALUE 1 COMP.
000021 01 y          PIC 9(10) VALUE 1 COMP.
000022 01 len        PIC 9(10) COMP.
000023 01 num        PIC S9(10).
000024 01 ans        PIC 9(10).
000025 01 zs         PIC Z(9)9.
000026 01 C          PIC S9(10).
000027 01 M          PIC 9(10).
000028 01 N          PIC 9(10).
000029 01 A1.
000030    03 A11 OCCURS 20.
000031       05 A1111 OCCURS 20.
000032          07 A    PIC S9(10).
000033 01 B1.
000034    03 B11 OCCURS 20 DEPENDING ON M.
000035       05 B    PIC S9(10).
000036 
000037 PROCEDURE DIVISION.
000038   ACCEPT ln.
000039   UNSTRING ln DELIMITED BY SPACE INTO N M C.
000040 
000041   ACCEPT ln.
000042   MOVE M TO maxlen.
000043 
000044   PERFORM maxlen TIMES
000045     PERFORM VARYING j FROM cur BY 1 UNTIL ln(j:1) = SPACE
000046     END-PERFORM
000047     COMPUTE len = j - cur
000048     IF ln(cur:1) NOT = "-"
000049         MOVE ln(cur:len) TO B(i)
000050     ELSE
000051         ADD 1 TO cur
000052         SUBTRACT 1 FROM len
000053         MOVE ln(cur:len) TO B(i)
000054         COMPUTE B(i) = -B(i)
000055     END-IF
000056     COMPUTE cur = j + 1
000057     ADD 1 TO i
000058   END-PERFORM.
000059 
000060   PERFORM N TIMES
000061     ACCEPT ln
000062     MOVE 1 TO curm
000063     ADD 1 TO ax
000064     MOVE ZERO TO ay
000065     PERFORM M TIMES
000066       ADD 1 TO ay
000067       PERFORM VARYING l FROM curm BY 1 UNTIL ln(l:1) = SPACE
000068       END-PERFORM
000069       COMPUTE len = l - curm
000070       IF ln(curm:1) NOT = "-"
000071           MOVE ln(curm:len) TO A(ax ay)
000072       ELSE
000073           ADD 1 TO curm
000074           SUBTRACT 1 FROM len
000075           MOVE ln(curm:len) TO A(ax ay)
000076           COMPUTE A(ax ay) = -A(ax ay)
000077       END-IF
000078       COMPUTE curm = l + 1
000079       ADD 1 TO k
000080     END-PERFORM
000081   END-PERFORM.
000082 
000083   PERFORM VARYING x FROM curx BY 1 UNTIL N < x
000084     MOVE ZERO TO num
000085     PERFORM VARYING y FROM cury BY 1 UNTIL M < y
000086       COMPUTE num = num + A(x y) * B(y)
000087     END-PERFORM
000088     IF ZERO < num + C
000089       ADD 1 TO ans
000090     END-IF
000091   END-PERFORM.
000092 
000093   MOVE ans TO zs.
000094   DISPLAY FUNCTION TRIM(zs).
000095   STOP RUN.
