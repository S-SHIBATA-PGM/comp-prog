000001 IDENTIFICATION DIVISION.
000002 PROGRAM-ID. ABC_102_D.
000003 
000004 ENVIRONMENT DIVISION.
000005 INPUT-OUTPUT SECTION.
000006 FILE-CONTROL.
000007 SELECT SYSIN ASSIGN TO KEYBOARD ORGANIZATION LINE SEQUENTIAL.
000008 
000009 DATA DIVISION.
000010 FILE SECTION.
000011 FD SYSIN.
000012 01 INDATA     PIC X(2200000).
000013 
000014 WORKING-STORAGE SECTION.
000015 01 INF        PIC 9(15) VALUE 999999999999999.
000016 01 INP        PIC X(2200000).
000017 01 N          PIC 9(6).
000018 01 maxlen     PIC 9(6).
000019 01 cur        PIC 9(7) VALUE 1.
000020 01 len        PIC 9(7).
000021 01 i          PIC 9(6) VALUE 1 BINARY.
000022 01 j          PIC 9(7) BINARY.
000023 01 ret        PIC 9(6).
000024 01 li         PIC 9(6).
000025 01 ri         PIC 9(6).
000026 01 lv         PIC 9(15).
000027 01 rv         PIC 9(15).
000028 01 st         PIC 9(6).
000029 01 ed         PIC 9(6).
000030 01 bk         PIC 9(6).
000031 01 ms         PIC 9(6).
000032 01 ans        PIC X(15).
000033 01 x          PIC 9(10).
000034 01 sm         PIC 9(15).
000035 01 tmp        PIC 9(15).
000036 01 tmp2       PIC 9(15).
000037 01 mx         PIC 9(15).
000038 01 mn         PIC 9(15).
000039 01 flg        PIC 9(1).
000040 01 P          PIC 9(15).
000041 01 Q          PIC 9(15).
000042 01 R          PIC 9(15).
000043 01 S          PIC 9(15).
000044 01 zs         PIC Z(15)9.
000045 01 A1.
000046    03 A11 OCCURS 200000 DEPENDING ON maxlen INDEXED AX1 AX2.
000047       05 A    PIC 9(15).
000048 
000049 PROCEDURE DIVISION.
000050   ACCEPT N.
000051   OPEN INPUT SYSIN.
000052   READ SYSIN INTO INP.
000053   CLOSE SYSIN.
000054   MOVE N TO maxlen.
000055   PERFORM maxlen TIMES
000056     PERFORM VARYING j FROM cur BY 1 UNTIL INP(j:1) = SPACE
000057     END-PERFORM
000058     COMPUTE len = j - cur
000059     MOVE INP(cur:len) TO x
000060     ADD x TO tmp
000061     SET AX1 TO i
000062     MOVE tmp TO A(AX1)
000063     COMPUTE cur = j + 1
000064     ADD 1 TO i
000065   END-PERFORM.
000066   MOVE 1 TO li.
000067   MOVE 1 TO ri.
000068   MOVE INF TO sm.
000069   PERFORM VARYING i FROM 2 BY 1 UNTIL N - 1 <= i
000070     COMPUTE st = 1
000071     COMPUTE ed = i
000072     COMPUTE bk = li
000073     PERFORM F
000074     MOVE ret TO li
000075     IF ri < i + 1
000076       COMPUTE ri = i + 1
000077     END-IF
000078     COMPUTE st = i + 1
000079     COMPUTE ed = N
000080     COMPUTE bk = ri
000081     PERFORM F
000082     MOVE ret TO ri
000083     SET AX1 TO li
000084     COMPUTE P = A(AX1)
000085     SET AX1 TO i
000086     COMPUTE Q = A(AX1) - P
000087     SET AX1 TO ri
000088     SET AX2 TO i
000089     COMPUTE R = A(AX1) - A(AX2)
000090     SET AX2 TO N
000091     COMPUTE S = A(AX2) - A(AX1)
000092     COMPUTE mx = FUNCTION MAX(P, Q, R, S)
000093     COMPUTE mn = FUNCTION MIN(P, Q, R, S)
000094     IF mx - mn < sm
000095       COMPUTE sm = mx - mn
000096     END-IF
000097   END-PERFORM.
000098   MOVE sm TO zs.
000099   DISPLAY FUNCTION TRIM(zs).
000100   STOP RUN.
000101 
000102 F SECTION.
000103   MOVE INF TO tmp
000104   MOVE 1 TO ret
000105   MOVE ZERO TO flg
000106   PERFORM VARYING j FROM bk BY 1 UNTIL ed < j
000107     SET AX1 TO j
000108     COMPUTE lv = A(AX1)
000109     IF st NOT = 1
000110       COMPUTE ms = st - 1
000111       SET AX2 TO ms
000112       COMPUTE lv = A(AX1) - A(AX2)
000113     END-IF
000114     SET AX2 TO ed
000115     COMPUTE rv = A(AX2) - A(AX1)
000116     IF lv < rv
000117       COMPUTE tmp2 = rv - lv
000118     ELSE
000119       COMPUTE tmp2 = lv - rv
000120     END-IF
000121     IF tmp2 < tmp
000122       COMPUTE tmp = tmp2
000123       COMPUTE ret = j
000124       MOVE 1 TO flg
000125     ELSE
000126       IF 1 = flg
000127         EXIT PERFORM
000128       END-IF
000129     END-IF
000130   END-PERFORM.

