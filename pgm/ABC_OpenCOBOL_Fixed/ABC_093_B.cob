000001 IDENTIFICATION DIVISION.
000002 PROGRAM-ID. ABC_093_B.
000003 
000004 DATA DIVISION.
000005 WORKING-STORAGE SECTION.
000006 01 A1.
000007    03 A11 OCCURS 100.
000008       05 A    PIC 9(10).
000009 01 ABK1.
000010    03 ABK11 OCCURS 3.
000011       05 ABK  PIC 9(10).
000012 01 B1.
000013    03 B11 OCCURS 100.
000014       05 B    PIC 9(10).
000015 01 cur        PIC 9(26) VALUE 1.
000016 01 i          PIC 9(18) VALUE 1.
000017 01 idx        PIC 9(10).
000018 01 idx2       PIC 9(10).
000019 01 j          PIC 9(18).
000020 01 len        PIC 9(26).
000021 01 ln         PIC X(26).
000022 01 m          PIC 9(11).
000023 01 maxlen     PIC 9(1) VALUE 3.
000024 01 p          PIC 9(11).
000025 01 tmp        PIC 9(10).
000026 01 zs         PIC Z(11).
000027 
000028 PROCEDURE DIVISION.
000029   ACCEPT ln.
000030   PERFORM maxlen TIMES
000031     PERFORM VARYING j FROM cur BY 1 UNTIL ln(j:1) = SPACE
000032     END-PERFORM
000033     COMPUTE len = j - cur
000034     MOVE ln(cur:len) TO ABK(i)
000035     COMPUTE cur = j + 1
000036     ADD 1 TO i
000037   END-PERFORM.
000038   MOVE 1 TO idx.
000039   PERFORM VARYING m FROM ABK(1) BY 1
000040   UNTIL ABK(1) + ABK(3) - 1 < m
000041     IF m <= ABK(2) THEN
000042       MOVE m TO A(idx)
000043       ADD 1 TO idx
000044     ELSE
000045       EXIT PERFORM
000046     END-IF
000047   END-PERFORM.
000048   MOVE 1 TO idx2.
000049   SUBTRACT 1 FROM idx GIVING tmp.
000050   PERFORM VARYING p FROM ABK(2) BY -1
000051   UNTIL p < ABK(2) - ABK(3) + 1
000052     IF A(tmp) < p THEN
000053       MOVE p TO B(idx2)
000054       ADD 1 TO idx2
000055     ELSE
000056       EXIT PERFORM
000057     END-IF
000058   END-PERFORM.
000059   SUBTRACT 1 FROM idx.
000060   PERFORM VARYING m FROM 1 BY 1 UNTIL idx < m
000061     MOVE A(m) TO zs
000062     DISPLAY FUNCTION TRIM(zs)
000063   END-PERFORM.
000064   SUBTRACT 1 FROM idx2.
000065   PERFORM VARYING p FROM idx2 BY -1 UNTIL p < 1
000066     MOVE B(p) TO zs
000067     DISPLAY FUNCTION TRIM(zs)
000068   END-PERFORM.
000069   STOP RUN.

