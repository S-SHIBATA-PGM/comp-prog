000010 IDENTIFICATION DIVISION.
000020 PROGRAM-ID. ABC_125_B.
000030 
000040 DATA DIVISION.
000050 WORKING-STORAGE SECTION.
000060 01 ln         PIC X(400).
000070 01 maxlen     PIC 9(10) VALUE 100 COMP.
000080 01 cur        PIC 9(10) VALUE 1 COMP.
000090 01 len        PIC 9(10) COMP.
000100 01 ans        PIC 9(10) VALUE ZERO.
000110 01 i          PIC 9(10) VALUE 1 COMP.
000120 01 j          PIC 9(10) COMP.
000130 01 k          PIC 9(10) VALUE 1 COMP.
000140 01 l          PIC 9(10) COMP.
000150 01 m          PIC 9(10) VALUE 1 COMP.
000160 01 zs         PIC Z(9)9.
000170 01 N          PIC 9(10).
000180 01 C1.
000190    03 C11 OCCURS 20 DEPENDING ON N.
000200       05 C    PIC 9(10).
000210 01 V1.
000220    03 V11 OCCURS 20 DEPENDING ON N.
000230       05 V    PIC 9(10).
000240 
000250 PROCEDURE DIVISION.
000260   ACCEPT N.
000270   MOVE N TO maxlen.
000280   ACCEPT ln.
000290   PERFORM maxlen TIMES
000300     PERFORM VARYING j FROM cur BY 1 UNTIL ln(j:1) = SPACE
000310     END-PERFORM
000320     COMPUTE len = j - cur
000330     MOVE ln(cur:len) TO V(i)
000340     COMPUTE cur = j + 1
000350     ADD 1 TO i
000360   END-PERFORM.
000370   MOVE 1 TO cur.
000380   ACCEPT ln.
000390   PERFORM maxlen TIMES
000400     PERFORM VARYING l FROM cur BY 1 UNTIL ln(l:1) = SPACE
000410     END-PERFORM
000420     COMPUTE len = l - cur
000430     MOVE ln(cur:len) TO C(k)
000440     COMPUTE cur = l + 1
000450     ADD 1 TO k
000460   END-PERFORM.
000470   MOVE 1 TO cur.
000480   PERFORM VARYING m FROM cur BY 1 UNTIL N < m
000490     IF C(m) < V(m)
000500       COMPUTE ans = ans + V(m) - C(m)
000510     END-IF
000520   END-PERFORM.
000530   MOVE ans TO zs.
000540   DISPLAY FUNCTION TRIM(zs)
000550   STOP RUN.
